{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/artikl/artikl.component.ts","webpack:///src/app/components/artikl/artikl.component.html","webpack:///src/app/components/core/about/about.component.ts","webpack:///src/app/components/core/about/about.component.html","webpack:///src/app/components/core/author/author.component.ts","webpack:///src/app/components/core/author/author.component.html","webpack:///src/app/components/core/home/home.component.ts","webpack:///src/app/components/core/home/home.component.html","webpack:///src/app/components/dialogs/artikl-dialog/artikl-dialog.component.ts","webpack:///src/app/components/dialogs/artikl-dialog/artikl-dialog.component.html","webpack:///src/app/components/dialogs/dobavljac-dialog/dobavljac-dialog.component.ts","webpack:///src/app/components/dialogs/dobavljac-dialog/dobavljac-dialog.component.html","webpack:///src/app/components/dialogs/porudzbina-dialog/porudzbina-dialog.component.ts","webpack:///src/app/components/dialogs/porudzbina-dialog/porudzbina-dialog.component.html","webpack:///src/app/components/dialogs/stavka-porudzbine-dialog/stavka-porudzbine-dialog.component.ts","webpack:///src/app/components/dialogs/stavka-porudzbine-dialog/stavka-porudzbine-dialog.component.html","webpack:///src/app/components/dobavljac/dobavljac.component.ts","webpack:///src/app/components/dobavljac/dobavljac.component.html","webpack:///src/app/components/porudzbina/porudzbina.component.ts","webpack:///src/app/components/porudzbina/porudzbina.component.html","webpack:///src/app/components/primer-components/automobil/automobil.component.ts","webpack:///src/app/components/primer-components/automobil/automobil.component.html","webpack:///src/app/components/primer-components/vozilo/vozilo.component.ts","webpack:///src/app/components/primer-components/vozilo/vozilo.component.html","webpack:///src/app/components/stavka-porudzbine/stavka-porudzbine.component.ts","webpack:///src/app/components/stavka-porudzbine/stavka-porudzbine.component.html","webpack:///src/app/models/artikl.ts","webpack:///src/app/models/dobavljac.ts","webpack:///src/app/models/porudzbina.ts","webpack:///src/app/models/stavkaPorudzbine.ts","webpack:///src/app/services/artikl.service.ts","webpack:///src/app/services/dobavljac.service.ts","webpack:///src/app/services/porudzbina.service.ts","webpack:///src/app/services/stavka-porudzbine.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","Routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","schemas","providers","bootstrap","ArtiklComponent","artiklService","dialog","displayedColumns","console","log","loadData","getAllArtikl","subscribe","data","dataSource","paginator","sort","flag","naziv","proizvodjac","dialogRef","open","componentInstance","afterClosed","result","filterValue","trim","toLocaleLowerCase","filter","applyFilter","AboutComponent","AuthorComponent","HomeComponent","ArtiklDialogComponent","snackBar","addArtikl","duration","updateArtikl","deleteArtikl","close","cancel","DobavljacDialogComponent","dobavljacService","addDobavljac","updateDobavljac","deleteDobavljac","PorudzbinaDialogComponent","porudzbinaService","getAllDobavljac","dobavljaci","a","b","addPorudzbina","updatePorudzbina","deletePorudzbina","StavkaPorudzbineDialogComponent","stavkaPorudzbineService","artikli","addStavkaPorudzbine","updateStavkaPorudzbine","deleteStavkaPorudzbine","DobavljacComponent","adresa","kontakt","PorudzbinaComponent","getAllPorudzbina","filterPredicate","accumulator","currentTerm","key","dobavljac","dataStr","Object","reduce","toLowerCase","transformedFilter","indexOf","sortingDataAccessor","property","datum","isporuceno","placeno","iznos","row","selektovanaPorudzbina","AutomobilComponent","VoziloComponent","StavkaPorudzbineComponent","getStavkeZaPorudzbinu","artikl","redniBroj","kolicina","jedinicaMere","cena","porudzbina","i","Artikl","Dobavljac","Porudzbina","StavkaPorudzbine","ArtiklService","httpClient","API_URL","dataChange","get","next","error","name","message","asObservable","post","put","providedIn","DobavljacService","PorudzbinaService","StavkaPorudzbineService","API_URL_BYID","idPorudzbine","stavkaPorudzbine","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { ArtiklComponent } from './components/artikl/artikl.component';\r\nimport { DobavljacComponent } from './components/dobavljac/dobavljac.component';\r\nimport { PorudzbinaComponent } from './components/porudzbina/porudzbina.component';\r\nimport { HomeComponent } from './components/core/home/home.component';\r\nimport { AboutComponent } from './components/core/about/about.component';\r\nimport { AuthorComponent } from './components/core/author/author.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n\r\nconst Routes = [\r\n  { path: 'artikl', component: ArtiklComponent },\r\n  { path: 'dobavljac', component: DobavljacComponent },\r\n  { path: 'porudzbina', component: PorudzbinaComponent },\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'about', component: AboutComponent },\r\n  { path: 'author', component: AuthorComponent },\r\n  { path: '', redirectTo: '/home', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(Routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'FrontendRVA2';\n}\n","<!-- <app-vozilo></app-vozilo>\n<button mat-button>Press</button> -->\n<mat-sidenav-container class=\"example-container\">\n  <mat-sidenav mode=\"over\" [fixedInViewport]=\"true\" opened mode=\"side\">\n    <mat-accordion>\n      <a mat-button style=\"text-align: center\">\n        <mat-icon [routerLink]=\"['/home']\">\n          Home\n        </mat-icon>\n      </a>\n      <mat-expansion-panel>\n        <mat-expansion-panel-header>\n          <mat-panel-title>\n            Aplikacija\n          </mat-panel-title>\n          <mat-panel-description>\n            Aplikacija za vodjenje evidencije\n          </mat-panel-description>\n        </mat-expansion-panel-header>\n        <mat-nav-list>\n          <a [routerLink]=\"['/artikl']\" mat-button>Artikl</a>\n        </mat-nav-list>\n        <mat-nav-list>\n          <a [routerLink]=\"['/dobavljac']\" mat-button>Dobavljač</a>\n        </mat-nav-list>\n        <mat-nav-list>\n          <a [routerLink]=\"['/porudzbina']\" mat-button>Porudžbina</a>\n        </mat-nav-list>\n      </mat-expansion-panel>\n      <mat-expansion-panel>\n        <mat-expansion-panel-header>\n          <mat-panel-title>\n            Informacije\n          </mat-panel-title>\n          <mat-panel-description>\n            Osnovne informacije o aplikaciji\n          </mat-panel-description>\n        </mat-expansion-panel-header>\n        <mat-nav-list>\n          <a [routerLink]=\"['/home']\" mat-button>Početna</a>\n        </mat-nav-list>\n        <mat-nav-list>\n          <a [routerLink]=\"['/author']\" mat-button>Autor</a>\n        </mat-nav-list>\n        <mat-nav-list>\n          <a [routerLink]=\"['/about']\" mat-button>O nama</a>\n        </mat-nav-list>\n      </mat-expansion-panel>\n    </mat-accordion>\n  </mat-sidenav>\n  <router-outlet></router-outlet>\n</mat-sidenav-container>\n","import { AppRoutingModule } from './app-routing.module';\nimport { PorudzbinaService } from './services/porudzbina.service';\nimport { ArtiklService } from 'src/app/services/artikl.service';\nimport { VoziloComponent } from './components/primer-components/vozilo/vozilo.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { AutomobilComponent } from './components/primer-components/automobil/automobil.component';\nimport { HomeComponent } from './components/core/home/home.component';\nimport { AuthorComponent } from './components/core/author/author.component';\nimport { AboutComponent } from './components/core/about/about.component';\nimport { ArtiklComponent } from './components/artikl/artikl.component';\nimport { DobavljacComponent } from './components/dobavljac/dobavljac.component';\nimport { PorudzbinaComponent } from './components/porudzbina/porudzbina.component';\nimport { StavkaPorudzbineComponent } from './components/stavka-porudzbine/stavka-porudzbine.component';\nimport { DobavljacService } from './services/dobavljac.service';\nimport { StavkaPorudzbineService } from './services/stavka-porudzbine.service';\nimport { ArtiklDialogComponent } from './components/dialogs/artikl-dialog/artikl-dialog.component';\nimport { DobavljacDialogComponent } from './components/dialogs/dobavljac-dialog/dobavljac-dialog.component';\nimport { PorudzbinaDialogComponent } from './components/dialogs/porudzbina-dialog/porudzbina-dialog.component';\nimport { StavkaPorudzbineDialogComponent } from './components/dialogs/stavka-porudzbine-dialog/stavka-porudzbine-dialog.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    VoziloComponent,\n    AutomobilComponent,\n    HomeComponent,\n    AuthorComponent,\n    AboutComponent,\n    ArtiklComponent,\n    DobavljacComponent,\n    PorudzbinaComponent,\n    StavkaPorudzbineComponent,\n    ArtiklDialogComponent,\n    DobavljacDialogComponent,\n    PorudzbinaDialogComponent,\n    StavkaPorudzbineDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatListModule,\n    MatGridListModule,\n    MatExpansionModule,\n    MatToolbarModule,\n    MatNativeDateModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatSnackBarModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatDatepickerModule,\n    MatSelectModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule\n  ],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ArtiklService } from './../../services/artikl.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, ChangeDetectorRef, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Artikl } from 'src/app/models/artikl';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ArtiklDialogComponent } from '../dialogs/artikl-dialog/artikl-dialog.component';\n\n\n@Component({\n  selector: 'app-artikl',\n  templateUrl: './artikl.component.html',\n  styleUrls: ['./artikl.component.css']\n})\nexport class ArtiklComponent implements OnInit {\n\n  displayedColumns = ['id', 'naziv', 'proizvodjac', 'actions'];\n  dataSource: MatTableDataSource<Artikl>;\n\n  @ViewChild(MatPaginator, {static: false}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: false}) sort: MatSort;\n\n  constructor(private artiklService: ArtiklService,\n              private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    console.log('Inicijalizacija Artikl komponente!');\n    this.loadData();\n  }\n\n  public loadData() {\n    this.artiklService.getAllArtikl().subscribe(data => {\n      this.dataSource = new MatTableDataSource(data);\n\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  }\n\n  public openDialog(flag: number, id?: number, naziv?: string, proizvodjac?: string) {\n    const dialogRef = this.dialog.open(ArtiklDialogComponent,\n      {data: {id, naziv, proizvodjac}}\n    );\n\n    dialogRef.componentInstance.flag = flag;\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        this.loadData();\n      }\n    });\n\n  }\n\n  applyFilter(filterValue: string){\n    filterValue = filterValue.trim();\n    filterValue = filterValue.toLocaleLowerCase();\n    this.dataSource.filter = filterValue;\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n  <span class=\"title-center\">Artikl</span>\n</mat-toolbar>\n\n<div class=\"container mat-elevation-z8\">\n  <mat-form-field>\n    <input\n      matInput\n      placeholder=\"Filter\"\n      (keyup)=\"applyFilter($event.target.value)\"\n    />\n  </mat-form-field>\n  <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n    <!-- ID Column -->\n    <ng-container matColumnDef=\"id\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\n      <mat-cell *matCellDef=\"let row\">{{ row.id }}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"naziv\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Naziv</mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{ row.naziv }}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"proizvodjac\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Proizvođač</mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{ row.proizvodjac }}</mat-cell>\n    </ng-container>\n\n    <!-- actions -->\n    <ng-container matColumnDef=\"actions\">\n      <mat-header-cell *matHeaderCellDef>\n        <button mat-icon-button color=\"primary\" (click)=\"openDialog(1)\">\n          <mat-icon>add</mat-icon>\n        </button>\n      </mat-header-cell>\n\n      <mat-cell *matCellDef=\"let row; let i = index\">\n        <button mat-icon-button color=\"primary\" (click)=\"openDialog(2, row.id, row.naziv, row.proizvodjac)\">\n          <mat-icon aria-label=\"Edit\">edit</mat-icon>\n        </button>\n        <button mat-icon-button color=\"primary\" (click)=\"openDialog(3, row.id, row.naziv, row.proizvodjac)\">\n          <mat-icon aria-label=\"Delete\">delete</mat-icon>\n        </button>\n      </mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row\n      style=\"cursor: default\"\n      *matRowDef=\"let row; columns: displayedColumns\"\n    ></mat-row>\n  </mat-table>\n  <mat-paginator\n    [length]=\"100\"\n    [pageSize]=\"5\"\n    [pageSizeOptions]=\"[5, 10, 25, 100]\">\n  </mat-paginator>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>about works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-author',\n  templateUrl: './author.component.html',\n  styleUrls: ['./author.component.css']\n})\nexport class AuthorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>author works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","import { ArtiklService } from './../../../services/artikl.service';\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Artikl } from 'src/app/models/artikl';\n\n@Component({\n  selector: 'app-artikl-dialog',\n  templateUrl: './artikl-dialog.component.html',\n  styleUrls: ['./artikl-dialog.component.css']\n})\nexport class ArtiklDialogComponent implements OnInit {\n\n  public flag: number;\n\n  constructor(public artiklService: ArtiklService,\n              public snackBar: MatSnackBar,\n              public dialogRef: MatDialogRef<ArtiklDialogComponent>,\n              @Inject (MAT_DIALOG_DATA) public data: Artikl) { }\n\n  ngOnInit(): void {\n  }\n\n  // Slucajevi buttona Potvrdi\n\n  public add(): void {\n    this.artiklService.addArtikl(this.data);\n    this.snackBar.open('Uspešno dodat artikl: ' + this.data.naziv, 'U redu', {\n      duration: 2500\n    });\n  }\n\n  public update(): void {\n    this.artiklService.updateArtikl(this.data);\n    this.snackBar.open('Uspešno modifikovan artikl: ' + this.data.naziv, 'U redu', {\n      duration: 2500\n    });\n  }\n\n  public delete(): void {\n    this.artiklService.deleteArtikl(this.data.id);\n    this.snackBar.open('Uspešno obrisan artikl: ' + this.data.naziv, 'U redu', {\n      duration: 2500\n    });\n  }\n\n  // Button Odustani\n\n  public cancel(): void {\n    this.dialogRef.close();\n    this.snackBar.open('Odustali ste', 'U redu', {\n      duration: 1000\n    });\n  }\n\n}\n","<div class=\"container\">\n  <h3 mat-dialog-title *ngIf=\"flag == 1\">Dodavanje artikla</h3>\n  <h3 mat-dialog-title *ngIf=\"flag == 2\">Modifikacija artikla: {{data.naziv}}</h3>\n  <h3 mat-dialog-title *ngIf=\"flag == 3\">Brisanje artikla: {{data.naziv}}</h3>\n  <form class=\"mat-dialog-content\" #formControl=\"ngForm\">\n    <div class=\"form\">\n      <mat-form-field>\n        <input matInput placeholder=\"Naziv\" [(ngModel)]=\"data.naziv\" name=\"naziv\" [disabled]=\"flag == 3\" required>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form\">\n      <mat-form-field>\n        <input matInput placeholder=\"Proizvodjac\" [(ngModel)]=\"data.proizvodjac\" name=\"proizvodjac\" [disabled]=\"flag == 3\">\n      </mat-form-field>\n    </div>\n    <div mat-dialog-actions>\n      <button mat-button *ngIf=\"flag == 1\" type=\"submit\" [mat-dialog-close]=\"1\" (click)=\"add()\" [disabled]=\"!formControl.valid\">Sačuvaj</button>\n      <button mat-button *ngIf=\"flag == 2\" type=\"submit\" [mat-dialog-close]=\"1\" (click)=\"update()\" [disabled]=\"!formControl.valid\">Sačuvaj</button>\n      <button mat-button *ngIf=\"flag == 3\" type=\"submit\" [mat-dialog-close]=\"1\" (click)=\"delete()\">Obriši</button>\n      <button mat-button (click)=\"cancel()\">Poništi</button>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Dobavljac } from 'src/app/models/dobavljac';\nimport { DobavljacService } from 'src/app/services/dobavljac.service';\n\n@Component({\n  selector: 'app-dobavljac-dialog',\n  templateUrl: './dobavljac-dialog.component.html',\n  styleUrls: ['./dobavljac-dialog.component.css']\n})\nexport class DobavljacDialogComponent implements OnInit {\n  public flag: number;\n\n  constructor(public snackBar: MatSnackBar,\n              public dialogRef: MatDialogRef<DobavljacDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: Dobavljac,\n              public dobavljacService: DobavljacService) { }\n\n  ngOnInit() {\n  }\n\n  public add(): void {\n    this.data.id = -1;\n    this.dobavljacService.addDobavljac(this.data);\n    this.snackBar.open('Uspešno dodat dobavljač: ' + this.data.naziv, 'U redu', { duration: 2500 });\n  }\n\n  public update(): void {\n    this.dobavljacService.updateDobavljac(this.data);\n    this.snackBar.open('Uspešno modifikovan dobavljač: ' + this.data.id, 'U redu', { duration: 2500 });\n  }\n\n  public delete(): void {\n    this.dobavljacService.deleteDobavljac(this.data.id);\n    this.snackBar.open('Uspešno obrisan dobavljač: ' + this.data.id, 'U redu', { duration: 2500 });\n  }\n\n  public cancel(): void {\n    this.dialogRef.close();\n    this.snackBar.open('Odustali ste', 'U redu', { duration: 1000 });\n  }\n}\n","<div class=\"container\">\n  <h3 mat-dialog-title *ngIf=\"flag == 1\">Dodavanje dobavljača</h3>\n  <h3 mat-dialog-title *ngIf=\"flag == 2\">Modifikacija dobavljača</h3>\n  <h3 mat-dialog-title *ngIf=\"flag == 3\">Brisanje dobavljača</h3>\n  <form class=\"mat-dialog-content\" #formControl=\"ngForm\">\n    <div class=\"form\">\n      <mat-form-field>\n        <input matInput placeholder=\"Adresa\" [(ngModel)]=\"data.adresa\" name=\"adresa\" [disabled]=\"flag==3\" required>\n      </mat-form-field>\n    </div>\n    <div class=\"form\">\n      <mat-form-field>\n        <input matInput placeholder=\"Naziv\" [(ngModel)]=\"data.naziv\" name=\"naziv\" [disabled]=\"flag==3\" required>\n      </mat-form-field>\n    </div>\n    <div class=\"form\">\n      <mat-form-field>\n        <input matInput placeholder=\"Kontakt\" [(ngModel)]=\"data.kontakt\" name=\"kontakt\" [disabled]=\"flag==3\" required>\n      </mat-form-field>\n    </div>\n    <div mat-dialog-actions>\n      <button mat-button *ngIf=\"flag==1\" type=\"submit\" [mat-dialog-close]=\"1\" (click)=\"add()\" [disabled]=\"!formControl.valid\">\n        Sačuvaj\n      </button>\n      <button mat-button *ngIf=\"flag==2\" type=\"submit\" [mat-dialog-close]=\"1\" (click)=\"update()\" [disabled]=\"!formControl.valid\">\n        Sačuvaj\n      </button>\n      <button mat-button *ngIf=\"flag==3\" type=\"submit\" [mat-dialog-close]=\"1\" (click)=\"delete()\">\n        Obriši\n      </button>\n      <button mat-button (click)=\"cancel()\">Poništi</button>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { Dobavljac } from 'src/app/models/dobavljac';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Porudzbina } from 'src/app/models/porudzbina';\nimport { PorudzbinaService } from 'src/app/services/porudzbina.service';\nimport { DobavljacService } from 'src/app/services/dobavljac.service';\n\n@Component({\n  selector: 'app-porudzbina-dialog',\n  templateUrl: './porudzbina-dialog.component.html',\n  styleUrls: ['./porudzbina-dialog.component.css']\n})\nexport class PorudzbinaDialogComponent implements OnInit {\n\n  dobavljaci: Dobavljac[];\n  public flag: number;\n\n  constructor(public snackBar: MatSnackBar,\n              public dialogRef: MatDialogRef<PorudzbinaDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: Porudzbina,\n              public porudzbinaService: PorudzbinaService,\n              public dobavljacService: DobavljacService\n  ) { }\n\n  ngOnInit() {\n    this.dobavljacService.getAllDobavljac().subscribe(dobavljaci =>\n      this.dobavljaci = dobavljaci\n    );\n  }\n\n  compareTo(a, b) {\n    return a.id == b.id;\n  }\n\n  public add(): void {\n    this.data.id = -1;\n    this.porudzbinaService.addPorudzbina(this.data);\n    this.snackBar.open('Uspešno dodata porudžbina', 'U redu', { duration: 1500 });\n  }\n\n  public update(): void {\n    this.porudzbinaService.updatePorudzbina(this.data);\n    this.snackBar.open('Uspešno modifikovana porudžbina', 'U redu', { duration: 1500 });\n  }\n\n  public delete(): void {\n    this.porudzbinaService.deletePorudzbina(this.data.id);\n    this.snackBar.open('Uspešno obrisana porudžbina', 'U redu', { duration: 1500 });\n  }\n\n  public cancel(): void {\n    this.dialogRef.close();\n    this.snackBar.open('Odustali ste', 'U redu', { duration: 500 });\n  }\n}\n","<div class=\"container\">\n  <h3 mat-dialog-title *ngIf=\"flag == 1\">Dodavanje porudžbine</h3>\n  <h3 mat-dialog-title *ngIf=\"flag == 2\">Modifikacija porudžbine: {{data.id}}</h3>\n  <h3 mat-dialog-title *ngIf=\"flag == 3\">Brisanje porudžbine: {{data.id}}</h3>\n\n  <form class=\"mat-dialog-content\"  #formControl=\"ngForm\">\n    <div class=\"form\">\n      <mat-form-field>\n        <input matInput [matDatepicker]=\"datumKreiranja\" placeholder=\"Datum kreiranja\" [(ngModel)]=\"data.datum\" name=\"datum\" [disabled]=\"flag == 3\">\n        <mat-datepicker-toggle matSuffix [for]=\"datumKreiranja\"></mat-datepicker-toggle>\n        <mat-datepicker #datumKreiranja></mat-datepicker>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form\">\n      <mat-form-field>\n        <input matInput [matDatepicker]=\"datumIsporuke\" placeholder=\"Datum isporuke\" [(ngModel)]=\"data.isporuceno\" name=\"isporuceno\"\n          [disabled]=\"flag == 3\">\n        <mat-datepicker-toggle matSuffix [for]=\"datumIsporuke\"></mat-datepicker-toggle>\n        <mat-datepicker #datumIsporuke></mat-datepicker>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form\">\n      <mat-form-field class=\"example-full-width\">\n        <input type=\"tel\" matInput placeholder=\"Iznos\" [(ngModel)]=\"data.iznos\" name=\"iznos\" [disabled]=\"flag == 3\">\n        <span matSuffix>RSD</span>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form\">\n      <mat-checkbox style=\"align-content: flex-end\" [(ngModel)]=\"data.placeno\" name=\"placeno\" [disabled]=\"flag == 3\">Plaćeno</mat-checkbox>\n    </div>\n\n    <div class=\"form\">\n      <mat-form-field>\n        <mat-select [(ngModel)]=\"data.dobavljac\" placeholder=\"Dobavljač\" name=\"dobavljac\" [compareWith]=\"compareTo\" [disabled]=\"flag == 3\">\n          <mat-option *ngFor=\"let dobavljac of dobavljaci\" [value]=\"dobavljac\">\n            {{ dobavljac.naziv }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n\n    <div mat-dialog-actions>\n      <button mat-button *ngIf=\"flag == 1\"  [disabled]=\"!formControl.valid\" [mat-dialog-close]=\"1\" (click)=\"add()\">Sačuvaj</button>\n      <button mat-button *ngIf=\"flag == 2\"  [disabled]=\"!formControl.valid\" [mat-dialog-close]=\"1\" (click)=\"update()\">Sačuvaj</button>\n      <button mat-button *ngIf=\"flag == 3\"  [mat-dialog-close]=\"1\" (click)=\"delete()\">Obriši</button>\n      <button mat-button (click)=\"cancel()\" tabindex=\"-1\">Poništi</button>\n    </div>\n  </form>\n </div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { Artikl } from 'src/app/models/artikl';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { StavkaPorudzbine } from 'src/app/models/stavkaPorudzbine';\nimport { StavkaPorudzbineService } from 'src/app/services/stavka-porudzbine.service';\nimport { ArtiklService } from 'src/app/services/artikl.service';\n\n@Component({\n  selector: 'app-stavka-porudzbine-dialog',\n  templateUrl: './stavka-porudzbine-dialog.component.html',\n  styleUrls: ['./stavka-porudzbine-dialog.component.css']\n})\nexport class StavkaPorudzbineDialogComponent implements OnInit {\n\n  artikli: Artikl[];\n  public flag: number;\n\n  constructor(public snackBar: MatSnackBar,\n              public dialogRef: MatDialogRef<StavkaPorudzbineDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: StavkaPorudzbine,\n              public stavkaPorudzbineService: StavkaPorudzbineService,\n              public artiklService: ArtiklService\n  ) { }\n\n\n  ngOnInit() {\n    this.artiklService.getAllArtikl().subscribe(artikli =>\n      this.artikli = artikli\n    );\n  }\n\n  public add(): void {\n    this.data.id = -1;\n    this.stavkaPorudzbineService.addStavkaPorudzbine(this.data);\n    this.snackBar.open('Uspešno dodata stavka porudžbine', 'U redu', { duration: 2500 });\n  }\n\n  public update(): void {\n    this.stavkaPorudzbineService.updateStavkaPorudzbine(this.data);\n    this.snackBar.open('Uspešno modifikovana stavka porudžbine', 'U redu', { duration: 2500 });\n  }\n\n  public delete(): void {\n    this.stavkaPorudzbineService.deleteStavkaPorudzbine(this.data.id);\n    this.snackBar.open('Uspešno obrisana stavka porudžbine', 'U redu', { duration: 2000 });\n  }\n\n  public cancel(): void {\n    this.dialogRef.close();\n    this.snackBar.open('Odustali ste', 'U redu', { duration: 1000 });\n  }\n\n  compareTo(a, b) {\n    return a.id === b.id;\n  }\n}\n","<div class=\"container\">\n  <h3 mat-dialog-title *ngIf=\"flag == 1\">Dodavanje stavke porudžbine</h3>\n  <h3 mat-dialog-title *ngIf=\"flag == 2\">Modifikacija stavke porudžbine: {{data.id}}</h3>\n  <h3 mat-dialog-title *ngIf=\"flag == 3\">Brisanje stavke porudžbine: {{data.id}}</h3>\n\n  <form class=\"mat-dialog-content\"  #formControl=\"ngForm\">\n\n    <div class=\"form\">\n      <mat-form-field>\n        <mat-select [(ngModel)]=\"data.artikl\" placeholder=\"Artikl\" name=\"artikl\" [compareWith]=\"compareTo\" [disabled]=\"flag == 3\">\n          <mat-option *ngFor=\"let artikl of artikli\" [value]=\"artikl\">\n            {{ artikl.naziv }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form\">\n      <mat-form-field>\n        <input matInput placeholder=\"Količina\" [(ngModel)]=\"data.kolicina\" name=\"kolicina\" [disabled]=\"flag == 3\">\n      </mat-form-field>\n    </div>\n\n    <div class=\"form\">\n      <mat-form-field>\n        <input matInput placeholder=\"Jedinica mere\" [(ngModel)]=\"data.jedinicaMere\" name=\"jedinicaMere\" [disabled]=\"flag == 3\">\n      </mat-form-field>\n    </div>\n\n    <div class=\"form\">\n      <mat-form-field>\n        <input matInput placeholder=\"Cena\" [(ngModel)]=\"data.cena\" name=\"cena\" [disabled]=\"flag == 3\">\n      </mat-form-field>\n    </div>\n\n    <div mat-dialog-actions>\n      <button mat-button *ngIf=\"flag == 1\" [disabled]=\"!formControl.valid\" [mat-dialog-close]=\"1\" (click)=\"add()\">Sačuvaj</button>\n      <button mat-button *ngIf=\"flag == 2\"  [disabled]=\"!formControl.valid\" [mat-dialog-close]=\"1\" (click)=\"update()\">Sačuvaj</button>\n      <button mat-button *ngIf=\"flag == 3\"  [mat-dialog-close]=\"1\" (click)=\"delete()\">Obriši</button>\n      <button mat-button (click)=\"cancel()\" tabindex=\"-1\">Poništi</button>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Dobavljac } from 'src/app/models/dobavljac';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { DobavljacService } from 'src/app/services/dobavljac.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DobavljacDialogComponent } from '../dialogs/dobavljac-dialog/dobavljac-dialog.component';\n\n@Component({\n  selector: 'app-dobavljac',\n  templateUrl: './dobavljac.component.html',\n  styleUrls: ['./dobavljac.component.css']\n})\nexport class DobavljacComponent implements OnInit {\n\n  displayedColumns = ['id', 'adresa', 'naziv', 'kontakt', 'actions'];\n  dataSource: MatTableDataSource<Dobavljac>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n\n  constructor(public dobavljacService: DobavljacService,\n              public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  public loadData() {\n    this.dobavljacService.getAllDobavljac().subscribe(data => {\n      this.dataSource = new MatTableDataSource(data);\n\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  }\n\n  public openDialog(flag: number, id?: number, adresa?: string, naziv?: string, kontakt?: string) {\n    const dialogRef = this.dialog.open(DobavljacDialogComponent,\n       { data: { id, adresa, naziv, kontakt } });\n\n    dialogRef.componentInstance.flag = flag;\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        this.loadData();\n      }\n    });\n  }\n\n  applyFilter(filterValue: string){\n    filterValue = filterValue.trim();\n    filterValue = filterValue.toLocaleLowerCase();\n    this.dataSource.filter = filterValue;\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <span class=\"title-center\">Dobavljač</span>\n</mat-toolbar>\n\n<div class=\"container mat-elevation-z8\">\n  <mat-form-field>\n    <input\n      matInput\n      (keyup)=\"applyFilter($event.target.value)\"\n      placeholder=\"Filter\"\n    />\n  </mat-form-field>\n  <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\n    <ng-container matColumnDef=\"id\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\n      <mat-cell *matCellDef=\"let row\">{{ row.id }}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"adresa\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header\n        >Adresa</mat-header-cell\n      >\n      <mat-cell *matCellDef=\"let row\">{{ row.adresa }}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"naziv\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Naziv</mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{ row.naziv }}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"kontakt\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header\n        >Kontakt</mat-header-cell\n      >\n      <mat-cell *matCellDef=\"let row\"> {{ row.kontakt }}</mat-cell>\n    </ng-container>\n\n    <!-- actions -->\n    <ng-container matColumnDef=\"actions\">\n      <mat-header-cell *matHeaderCellDef>\n        <button mat-icon-button color=\"primary\" (click)=\"openDialog(1)\">\n          <mat-icon>add</mat-icon>\n        </button>\n      </mat-header-cell>\n\n      <mat-cell *matCellDef=\"let row; let i = index\">\n        <button mat-icon-button color=\"primary\" (click)=\"openDialog(2, row.id, row.adresa, row.naziv, row.kontakt)\">\n          <mat-icon aria-label=\"Edit\">edit</mat-icon>\n        </button>\n\n        <button mat-icon-button color=\"primary\" (click)=\"openDialog(3, row.id, row.adresa, row.naziv, row.kontakt)\">\n          <mat-icon aria-label=\"Delete\">delete</mat-icon>\n        </button>\n      </mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row\n      style=\"cursor: default\"\n      *matRowDef=\"let row; columns: displayedColumns\"\n    ></mat-row>\n  </mat-table>\n  <mat-paginator\n    [length]=\"100\"\n    [pageSize]=\"5\"\n    [pageSizeOptions]=\"[5, 10, 25, 100]\">\n  </mat-paginator>\n</div>\n","import { MatSort } from '@angular/material/sort';\nimport { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Porudzbina } from 'src/app/models/porudzbina';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { PorudzbinaService } from 'src/app/services/porudzbina.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PorudzbinaDialogComponent } from '../dialogs/porudzbina-dialog/porudzbina-dialog.component';\nimport { Dobavljac } from 'src/app/models/dobavljac';\n\n@Component({\n  selector: 'app-porudzbina',\n  templateUrl: './porudzbina.component.html',\n  styleUrls: ['./porudzbina.component.css']\n})\nexport class PorudzbinaComponent implements OnInit {\n\n  displayedColumns = ['id', 'datum', 'isporuceno', 'iznos', 'placeno', 'dobavljac', 'actions'];\n  dataSource: MatTableDataSource<Porudzbina>;\n  selektovanaPorudzbina: Porudzbina;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(public porudzbinaService: PorudzbinaService,\n              public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  public loadData() {\n   this.porudzbinaService.getAllPorudzbina().subscribe(data => {\n     this.dataSource = new MatTableDataSource(data);\n\n     // pretraga po nazivu ugnježdenog objekta\n     this.dataSource.filterPredicate = (data, filter: string) => {\n       const accumulator = (currentTerm, key) => {\n         return key === 'dobavljac' ? currentTerm + data.dobavljac.naziv : currentTerm + data[key];\n       };\n       const dataStr = Object.keys(data).reduce(accumulator, '').toLowerCase();\n       const transformedFilter = filter.trim().toLowerCase();\n       return dataStr.indexOf(transformedFilter) !== -1;\n     };\n\n      // sortiranje po nazivu ugnježdenog objekta\n     this.dataSource.sortingDataAccessor = (data, property) => {\n       switch (property) {\n         case 'dobavljac': return data.dobavljac.naziv.toLocaleLowerCase();\n         default: return data[property];\n       }\n     };\n\n     this.dataSource.paginator = this.paginator;\n     this.dataSource.sort = this.sort;\n   });\n\n  }\n\n  public openDialog(flag: number, id?: number, datum?: Date, isporuceno?: Date, placeno?: boolean, iznos?: number, dobavljac?: Dobavljac ) {\n    const dialogRef = this.dialog.open(PorudzbinaDialogComponent,\n       { data: { id, datum, isporuceno, placeno, iznos, dobavljac  } });\n    dialogRef.componentInstance.flag = flag;\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1){\n         this.loadData();\n      }\n\n    });\n  }\n\n  selectRow(row: any){\n   this.selektovanaPorudzbina = row;\n  }\n\n  applyFilter(filterValue: string){\n   filterValue = filterValue.trim();\n   filterValue = filterValue.toLocaleLowerCase();\n   this.dataSource.filter = filterValue;\n }\n}\n","<mat-toolbar color=\"primary\">\n  <span class=\"title-center\">Porudžbina</span>\n</mat-toolbar>\n\n<div class=\"container mat-elevation-z8\">\n  <mat-form-field>\n    <input\n      matInput\n      (keyup)=\"applyFilter($event.target.value)\"\n      placeholder=\"Filter\"\n    />\n  </mat-form-field>\n  <mat-table #table [dataSource]=\"dataSource\" class=\"mat-cell\" matSort>\n    <ng-container matColumnDef=\"id\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\n      <mat-cell *matCellDef=\"let row\">{{ row.id }}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"datum\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header\n        >Datum kreiranja</mat-header-cell\n      >\n      <mat-cell *matCellDef=\"let row\">\n        {{ row.datum | date: \"dd.MM.yyyy.\" }}</mat-cell\n      >\n    </ng-container>\n\n    <ng-container matColumnDef=\"isporuceno\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header\n        >Datum isporuke</mat-header-cell\n      >\n      <mat-cell *matCellDef=\"let row\">\n        {{ row.isporuceno | date: \"dd.MM.yyyy.\" }}</mat-cell\n      >\n    </ng-container>\n\n    <ng-container matColumnDef=\"iznos\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Iznos</mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{ row.iznos }}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"placeno\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header\n        >Plaćeno</mat-header-cell\n      >\n      <mat-cell\n        *matCellDef=\"let row\"\n        [style.color]=\"row.placeno == true ? 'green' : 'red'\"\n      >\n        {{ row.placeno ? \"Da\" : \"Ne\" }}</mat-cell\n      >\n    </ng-container>\n\n    <ng-container matColumnDef=\"dobavljac\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header\n        >Dobavljač</mat-header-cell\n      >\n      <mat-cell *matCellDef=\"let row\"> {{ row.dobavljac.naziv }}</mat-cell>\n    </ng-container>\n    <!-- actions -->\n    <ng-container matColumnDef=\"actions\">\n      <mat-header-cell *matHeaderCellDef>\n        <button mat-icon-button color=\"primary\" (click)=\"openDialog(1)\">\n          <mat-icon>add</mat-icon>\n        </button>\n      </mat-header-cell>\n\n      <mat-cell *matCellDef=\"let row; let i = index\">\n        <button\n          mat-icon-button\n          color=\"primary\"\n          (click)=\"openDialog(2, row.id, row.datum, row.isporuceno, row.placeno, row.iznos, row.dobavljac)\">\n          <mat-icon aria-label=\"Edit\">edit</mat-icon>\n        </button>\n\n        <button\n          mat-icon-button\n          color=\"primary\"\n          (click)=\"openDialog(3, row.id, row.datum, row.isporuceno, row.placeno, row.iznos, row.dobavljac)\">\n          <mat-icon aria-label=\"Delete\">delete</mat-icon>\n        </button>\n      </mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row style=\"cursor: pointer\" *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"selectRow(row)\"></mat-row>\n  </mat-table>\n  <mat-paginator\n    [length]=\"100\"\n    [pageSize]=\"5\"\n    [pageSizeOptions]=\"[5, 10, 25, 100]\">\n  </mat-paginator>\n</div>\n<div class=\"container mat-elevation-z8\">\n  <app-stavka-porudzbine\n    *ngIf=\"selektovanaPorudzbina\"\n    [selektovanaPorudzbina]=\"selektovanaPorudzbina\"\n  ></app-stavka-porudzbine>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-automobil',\n  templateUrl: './automobil.component.html',\n  styleUrls: ['./automobil.component.css']\n})\nexport class AutomobilComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>automobil works!</p>\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-vozilo',\r\n  templateUrl: './vozilo.component.html'\r\n})\r\n\r\nexport class VoziloComponent{\r\n\r\n}\r\n","<h1>\r\n  Ja sam komponenta vozilo i sadrzim dve ugnjezdene komponente!\r\n</h1>\r\n<app-automobil></app-automobil>\r\n<app-automobil></app-automobil>\r\n","import { Component, OnInit, Input, ViewChild, OnChanges } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { StavkaPorudzbine } from 'src/app/models/stavkaPorudzbine';\nimport { Porudzbina } from 'src/app/models/porudzbina';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { StavkaPorudzbineService } from 'src/app/services/stavka-porudzbine.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Artikl } from 'src/app/models/artikl';\nimport { StavkaPorudzbineDialogComponent } from '../dialogs/stavka-porudzbine-dialog/stavka-porudzbine-dialog.component';\n\n@Component({\n  selector: 'app-stavka-porudzbine',\n  templateUrl: './stavka-porudzbine.component.html',\n  styleUrls: ['./stavka-porudzbine.component.css']\n})\nexport class StavkaPorudzbineComponent implements OnInit, OnChanges {\n  displayedColumns = ['id', 'redniBroj', 'kolicina', 'jedinicaMere', 'cena', 'porudzbina', 'artikl', 'actions'];\n  dataSource: MatTableDataSource<StavkaPorudzbine>;\n\n  @Input() selektovanaPorudzbina: Porudzbina;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(public stavkaPorudzbineService: StavkaPorudzbineService,\n              public dialog: MatDialog) { }\n\n  ngOnInit() {\n\n  }\n\n  ngOnChanges() {\n    if (this.selektovanaPorudzbina.id) {\n      debugger;\n      this.loadData();\n    }\n  }\n\n  public loadData() {\n    this.stavkaPorudzbineService.getStavkeZaPorudzbinu(this.selektovanaPorudzbina.id)\n      .subscribe(data => {\n        this.dataSource = new MatTableDataSource(data);\n        // pretraga po nazivu ugnježdenog objekta\n        this.dataSource.filterPredicate = (data, filter: string) => {\n          const accumulator = (currentTerm, key) => {\n            return key === 'artikl' ? currentTerm + data.artikl.naziv : currentTerm + data[key];\n          };\n          const dataStr = Object.keys(data).reduce(accumulator, '').toLowerCase();\n          const transformedFilter = filter.trim().toLowerCase();\n          return dataStr.indexOf(transformedFilter) !== -1;\n        };\n\n        // sortiranje po nazivu ugnježdenog objekta\n        this.dataSource.sortingDataAccessor = (data, property) => {\n          switch (property) {\n            case 'artikl': return data.artikl.naziv.toLocaleLowerCase();\n            default: return data[property];\n          }\n        };\n\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      });\n\n  }\n\n  public openDialog(flag: number, id?: number, redniBroj?: number, kolicina?: number, jedinicaMere?: number,\n                    cena?: number, porudzbina?: Porudzbina, artikl?: Artikl) {\n    const dialogRef = this.dialog.open(StavkaPorudzbineDialogComponent, {\n      data: {\n        i: id, id, redniBroj, kolicina, jedinicaMere,\n        cena, porudzbina, artikl\n      }\n    });\n    dialogRef.componentInstance.flag = flag;\n    if (flag === 1) {\n      dialogRef.componentInstance.data.porudzbina = this.selektovanaPorudzbina;\n    }\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        this.loadData();\n      }\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim();\n    filterValue = filterValue.toLocaleLowerCase();\n    this.dataSource.filter = filterValue;\n  }\n}\n","<mat-toolbar class=\"toolbarNew\" color=\"primary\">\n  <span class=\"title-center\">Stavka porudžbine</span>\n</mat-toolbar>\n<div class=\"container mat-elevation-z8\">\n  <mat-form-field>\n    <input\n      matInput\n      (keyup)=\"applyFilter($event.target.value)\"\n      placeholder=\"Filter\"\n    />\n  </mat-form-field>\n  <mat-table #table [dataSource]=\"dataSource\" class=\"mat-cell\" matSort>\n    <ng-container matColumnDef=\"id\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\n      <mat-cell *matCellDef=\"let row\">{{ row.id }}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"artikl\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header\n        >Artikl</mat-header-cell\n      >\n      <mat-cell *matCellDef=\"let row\"> {{ row.artikl.naziv }}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"redniBroj\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header\n        >Redni broj</mat-header-cell\n      >\n      <mat-cell *matCellDef=\"let row\"> {{ row.redniBroj }}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"kolicina\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header\n        >Količina</mat-header-cell\n      >\n      <mat-cell *matCellDef=\"let row\"> {{ row.kolicina }}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"jedinicaMere\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header\n        >Jedinica mere</mat-header-cell\n      >\n      <mat-cell *matCellDef=\"let row\"> {{ row.jedinicaMere }}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"cena\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Cena</mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{ row.cena }}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"porudzbina\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header\n        >Porudžbina</mat-header-cell\n      >\n      <mat-cell *matCellDef=\"let row\"> {{ row.porudzbina.id }}</mat-cell>\n    </ng-container>\n    <!-- actions -->\n    <ng-container matColumnDef=\"actions\">\n      <mat-header-cell *matHeaderCellDef>\n        <button mat-icon-button color=\"primary\" (click)=\"openDialog(1)\">\n          <mat-icon aria-label=\"Example icon-button with a heart icon\"\n            >add</mat-icon\n          >\n        </button>\n      </mat-header-cell>\n\n      <mat-cell *matCellDef=\"let row; let i = index\">\n        <button\n          mat-icon-button\n          color=\"primary\"\n          (click)=\"openDialog(2, row.id, row.redniBroj,\n         row.kolicina, row.jedinicaMere, row.cena, row.porudzbina, row.artikl)\">\n          <mat-icon aria-label=\"Edit\">edit</mat-icon>\n        </button>\n\n        <button\n          mat-icon-button\n          color=\"primary\"\n          (click)=\"openDialog(3, row.id, row.redniBroj,\n         row.kolicina, row.jedinicaMere, row.cena, row.porudzbina, row.artikl)\">\n          <mat-icon aria-label=\"Delete\">delete</mat-icon>\n        </button>\n      </mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row\n      style=\"cursor: default\"\n      *matRowDef=\"let row; columns: displayedColumns\">\n    </mat-row>\n  </mat-table>\n</div>\n","export class Artikl {\r\n  id: number;\r\n  naziv: string;\r\n  proizvodjac: string;\r\n}\r\n","export class Dobavljac {\r\n  id: number;\r\n  adresa: string;\r\n  naziv: string;\r\n  kontakt: string;\r\n}\r\n","import { Dobavljac } from './dobavljac';\r\n\r\nexport class Porudzbina {\r\n  id: number;\r\n  datum: Date;\r\n  isporuceno: Date;\r\n  placeno: boolean;\r\n  iznos: number;\r\n  dobavljac: Dobavljac;\r\n}\r\n","import { Artikl } from './artikl';\r\nimport { Porudzbina } from './porudzbina';\r\n\r\nexport class StavkaPorudzbine{\r\n  id: number;\r\n  redniBroj: number;\r\n  kolicina: number;\r\n  jedinicaMere: string;\r\n  cena: number;\r\n  artikl: Artikl;\r\n  porudzbina: Porudzbina;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Artikl } from '../models/artikl';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArtiklService {\n\n  // End Point u Development mode-u\n  // private readonly API_URL = 'http://localhost:8083/artikl/';\n\n  // End Point u Deployment mode-u\n  private readonly API_URL = 'https://backend-rva.herokuapp.com/artikl/';\n\n  dataChange: BehaviorSubject<Artikl[]> = new BehaviorSubject<Artikl[]>([]);\n\n  constructor(private httpClient: HttpClient) { }\n\n  public getAllArtikl(): Observable<Artikl[]> {\n    this.httpClient.get<Artikl[]>(this.API_URL).subscribe(data => {\n      this.dataChange.next(data);\n    },\n    (error: HttpErrorResponse) => {\n      console.log(error.name + ' ' + error.message);\n    });\n\n    return this.dataChange.asObservable();\n  }\n\n  public addArtikl(artikl: Artikl): void {\n    artikl.id = 0;\n    console.log('Dodat artikl ' + artikl.naziv);\n    this.httpClient.post(this.API_URL, artikl).subscribe();\n  }\n\n  public updateArtikl(artikl: Artikl): void {\n    this.httpClient.put(this.API_URL, artikl).subscribe();\n  }\n\n  public deleteArtikl(id: number): void {\n    console.log(this.API_URL + id);\n    this.httpClient.delete(this.API_URL + id).subscribe();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Dobavljac } from '../models/dobavljac';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DobavljacService {\n\n    // End Point u Development mode-u\n    // private readonly API_URL = 'http://localhost:8083/dobavljac/';\n\n    // End Point u Deployment mode-u\n    private readonly API_URL = 'https://backend-rva.herokuapp.com/dobavljac/';\n\n    dataChange: BehaviorSubject<Dobavljac[]> = new BehaviorSubject<Dobavljac[]>([]);\n\n    constructor(private httpClient: HttpClient) {\n\n    }\n\n    public getAllDobavljac(): Observable<Dobavljac[]> {\n        this.httpClient.get<Dobavljac[]>(this.API_URL).subscribe(data => {\n            this.dataChange.next(data);\n        },\n            (error: HttpErrorResponse) => {\n                console.log(error.name + ' ' + error.message);\n            });\n        return this.dataChange.asObservable();\n    }\n\n    public addDobavljac(dobavljac: Dobavljac): void {\n        this.httpClient.post(this.API_URL, dobavljac).subscribe();\n    }\n\n    public updateDobavljac(dobavljac: Dobavljac): void {\n        this.httpClient.put(this.API_URL, dobavljac).subscribe();\n    }\n\n    public deleteDobavljac(id: number): void {\n        this.httpClient.delete(this.API_URL + id).subscribe();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Porudzbina } from '../models/porudzbina';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PorudzbinaService {\n\n  // End Point u Development mode-u\n  // private readonly API_URL = 'http://localhost:8083/porudzbina/';\n\n  // End Point u Deployment mode-u\n  private readonly API_URL = 'https://backend-rva.herokuapp.com/porudzbina/';\n\n  dataChange: BehaviorSubject<Porudzbina[]> = new BehaviorSubject<Porudzbina[]>([]);\n\n  constructor(private httpClient: HttpClient) { }\n  public getAllPorudzbina(): Observable<Porudzbina[]> {\n      this.httpClient.get<Porudzbina[]>(this.API_URL).subscribe(data => {\n          this.dataChange.next(data);\n      },\n          (error: HttpErrorResponse) => {\n              console.log(error.name + ' ' + error.message);\n          });\n      return this.dataChange.asObservable();\n  }\n  public addPorudzbina(porudzbina: Porudzbina): void {\n      this.httpClient.post(this.API_URL, porudzbina).subscribe();\n  }\n  public updatePorudzbina(porudzbina: Porudzbina): void {\n      this.httpClient.put(this.API_URL, porudzbina).subscribe();\n  }\n  public deletePorudzbina(id: number): void {\n      this.httpClient.delete(this.API_URL + id).subscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { StavkaPorudzbine } from '../models/stavkaPorudzbine';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StavkaPorudzbineService {\n\n  // End Point u Development mode-u\n  // private readonly API_URL = 'http://localhost:8083/stavkaPorudzbine/';\n  // private readonly API_URL_BYID = 'http://localhost:8083/stavkeZaPorudzbinaId/';\n\n  // End Point u Deployment mode-u\n  private readonly API_URL = 'https://backend-rva.herokuapp.com/stavkaPorudzbine/';\n  private readonly API_URL_BYID = 'https://backend-rva.herokuapp.com/stavkeZaPorudzbinaId/';\n\n  dataChange: BehaviorSubject<StavkaPorudzbine[]> = new BehaviorSubject<StavkaPorudzbine[]>([]);\n\n  constructor(private httpClient: HttpClient) { }\n\n  public getStavkeZaPorudzbinu(idPorudzbine: number): Observable<StavkaPorudzbine[]> {\n    this.httpClient.get<StavkaPorudzbine[]>(this.API_URL_BYID + idPorudzbine).subscribe(data => {\n      this.dataChange.next(data);\n    },\n      (error: HttpErrorResponse) => {\n        console.log(error.name + ' ' + error.message);\n      });\n    return this.dataChange.asObservable();\n  }\n\n  public addStavkaPorudzbine(stavkaPorudzbine: StavkaPorudzbine): void {\n    this.httpClient.post(this.API_URL, stavkaPorudzbine).subscribe();\n  }\n\n  public updateStavkaPorudzbine(stavkaPorudzbine: StavkaPorudzbine): void {\n    this.httpClient.put(this.API_URL, stavkaPorudzbine).subscribe();\n  }\n\n  public deleteStavkaPorudzbine(id: number): void {\n    this.httpClient.delete(this.API_URL + id).subscribe();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}